{{#if errorMessage}}
  <p class="error-message">{{errorMessage}}</p>
{{/if}}

<div class="fixed-bar">
  <ul class="nav-bar">
    <li><a href="/">HOME</a></li>
    <li class="username-you">{{username}}</li>
    <li> in a game of {{game.type}}:</li>
    <li id="score" class="score"></li>
    <li id="game-state"></li>
    {{#if canGiveUp}}
      <li><a href="/game/{{game.id}}/give_up" data-method="put">give up</a></li>
    {{/if}}
    {{#if canCancel}}
      <li><a href="/game/{{game.id}}/cancel" data-method="put">cancel game</a></li>
    {{/if}}
    {{#if canJoin}}
      <li><a href="/game/{{game.id}}/join" data-method="put">join</a></li>
    {{/if}}
  </ul>
</div>
<div class="wrap">
  <div id="gamefield"></div>
  <div id="chat" class="chat">
    <div class="content"></div>
    <input type="text">
  </div>
</div>

<label><input type="checkbox" id="possibile-moves-switch"> Show possible moves</label>
{{{js 'webpage'}}}
{{{js 'gamepage'}}}
<script>
(function() {
  var chat   = new Chat('#chat', io.connect('/chat'), {
        channel: 'game-{{game.id}}',
        username: '{{username}}'
      }),
      logger = (function() {
        return {
          log: function(text) {
            chat.line(text);
          }
        }
      }()),
      games  = {
        Multiplication: ClonedGame,
        Reversi: ReversiGame,
        Morris: MorrisGame
      };

  var game = new games['{{game.type}}']('#gamefield', {
    username: '{{username}}',

    // game specific config
    boardSize: 8,
    cellWidth: 40,
    possibleMovesSwitch: '#possibile-moves-switch',
    data: {{{json game.data}}},

    // score element
    score: '#score',
    players: {{{json game.players}}},

    // general config
    socket: io.connect('/'),
    socketeerId: '{{socketeerId}}',
    {{#if game.started}}
    stones: {{{json game.board.stones}}},
    gameStarted: {{game.started}},
    actualPlayer: {{game.actualPlayer}},
    {{/if}}
    {{#if game.ended}}
      gameEnded: true,
      winner: {{game.winner}},
    {{/if}}
    gameId: '{{game.id}}',
    thisPlayerNr: {{thisPlayerPosition}},
    isSpectator: {{bool thisSpectator}},
    logger: logger
  });
  chat.isPlayerHandler = function(who) { return game.isPlayer(who); };
  new GameStateDisplay('#game-state', game, {
    username: '{{username}}'
  });
}());
</script>
